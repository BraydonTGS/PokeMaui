// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using PokeMaui.Business.Context;

#nullable disable

namespace PokeMaui.Business.Migrations
{
    [DbContext(typeof(PokemonDbContext))]
    partial class PokemonDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.14")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("PokeMaui.Entity.Entities.Ability", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .HasColumnName("AbilityName");

                    b.HasKey("Id");

                    b.ToTable("Ability");
                });

            modelBuilder.Entity("PokeMaui.Entity.Entities.Form", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .HasColumnName("FormName");

                    b.Property<Guid>("PokemonId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("PokemonId");

                    b.HasKey("Id");

                    b.HasIndex("PokemonId");

                    b.ToTable("Form");
                });

            modelBuilder.Entity("PokeMaui.Entity.Entities.Move", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .HasColumnName("MoveName");

                    b.HasKey("Id");

                    b.ToTable("Move");
                });

            modelBuilder.Entity("PokeMaui.Entity.Entities.Pokemon", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("BaseExperience")
                        .HasColumnType("int")
                        .HasColumnName("BaseExperience");

                    b.Property<int>("Height")
                        .HasColumnType("int")
                        .HasColumnName("Height");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .HasColumnName("PokemonName");

                    b.Property<int>("Order")
                        .HasColumnType("int")
                        .HasColumnName("Order");

                    b.Property<int>("Weight")
                        .HasColumnType("int")
                        .HasColumnName("Weight");

                    b.HasKey("Id");

                    b.ToTable("Pokemon");
                });

            modelBuilder.Entity("PokeMaui.Entity.Entities.PokemonAbility", b =>
                {
                    b.Property<Guid>("PokemonId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("PokemonId");

                    b.Property<Guid>("AbilityId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("AbilityId");

                    b.HasKey("PokemonId", "AbilityId");

                    b.HasIndex("AbilityId");

                    b.ToTable("PokemonAbility");
                });

            modelBuilder.Entity("PokeMaui.Entity.Entities.PokemonMoves", b =>
                {
                    b.Property<Guid>("PokemonId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("PokemonId");

                    b.Property<Guid>("MoveId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("MoveId");

                    b.HasKey("PokemonId", "MoveId");

                    b.HasIndex("MoveId");

                    b.ToTable("PokemonMoves");
                });

            modelBuilder.Entity("PokeMaui.Entity.Entities.PokemonTypes", b =>
                {
                    b.Property<Guid>("PokemonId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("PokemonId");

                    b.Property<Guid>("TypeId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("TypeId");

                    b.HasKey("PokemonId", "TypeId");

                    b.HasIndex("TypeId");

                    b.ToTable("PokemonTypes");
                });

            modelBuilder.Entity("PokeMaui.Entity.Entities.Sprite", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("Description");

                    b.Property<string>("Image")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("Image");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .HasColumnName("Name");

                    b.Property<Guid>("PokemonId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("PokemonId");

                    b.HasKey("Id");

                    b.HasIndex("PokemonId")
                        .IsUnique();

                    b.ToTable("Sprite");
                });

            modelBuilder.Entity("PokeMaui.Entity.Entities.Type", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .HasColumnName("TypeName");

                    b.HasKey("Id");

                    b.ToTable("Type");
                });

            modelBuilder.Entity("PokeMaui.Entity.Entities.Form", b =>
                {
                    b.HasOne("PokeMaui.Entity.Entities.Pokemon", "Pokemon")
                        .WithMany("Forms")
                        .HasForeignKey("PokemonId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Pokemon");
                });

            modelBuilder.Entity("PokeMaui.Entity.Entities.PokemonAbility", b =>
                {
                    b.HasOne("PokeMaui.Entity.Entities.Ability", "Ability")
                        .WithMany("PokemonAbility")
                        .HasForeignKey("AbilityId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("PokeMaui.Entity.Entities.Pokemon", "Pokemon")
                        .WithMany("PokemonAbility")
                        .HasForeignKey("PokemonId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Ability");

                    b.Navigation("Pokemon");
                });

            modelBuilder.Entity("PokeMaui.Entity.Entities.PokemonMoves", b =>
                {
                    b.HasOne("PokeMaui.Entity.Entities.Move", "Move")
                        .WithMany("PokemonMoves")
                        .HasForeignKey("MoveId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("PokeMaui.Entity.Entities.Pokemon", "Pokemon")
                        .WithMany("PokemonMoves")
                        .HasForeignKey("PokemonId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Move");

                    b.Navigation("Pokemon");
                });

            modelBuilder.Entity("PokeMaui.Entity.Entities.PokemonTypes", b =>
                {
                    b.HasOne("PokeMaui.Entity.Entities.Pokemon", "Pokemon")
                        .WithMany("PokemonTypes")
                        .HasForeignKey("PokemonId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("PokeMaui.Entity.Entities.Type", "Type")
                        .WithMany("PokemonTypes")
                        .HasForeignKey("TypeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Pokemon");

                    b.Navigation("Type");
                });

            modelBuilder.Entity("PokeMaui.Entity.Entities.Sprite", b =>
                {
                    b.HasOne("PokeMaui.Entity.Entities.Pokemon", "Pokemon")
                        .WithOne("Sprite")
                        .HasForeignKey("PokeMaui.Entity.Entities.Sprite", "PokemonId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Pokemon");
                });

            modelBuilder.Entity("PokeMaui.Entity.Entities.Ability", b =>
                {
                    b.Navigation("PokemonAbility");
                });

            modelBuilder.Entity("PokeMaui.Entity.Entities.Move", b =>
                {
                    b.Navigation("PokemonMoves");
                });

            modelBuilder.Entity("PokeMaui.Entity.Entities.Pokemon", b =>
                {
                    b.Navigation("Forms");

                    b.Navigation("PokemonAbility");

                    b.Navigation("PokemonMoves");

                    b.Navigation("PokemonTypes");

                    b.Navigation("Sprite")
                        .IsRequired();
                });

            modelBuilder.Entity("PokeMaui.Entity.Entities.Type", b =>
                {
                    b.Navigation("PokemonTypes");
                });
#pragma warning restore 612, 618
        }
    }
}
